from os import environ

from loguru import logger
from openai import OpenAIError
from vkbottle import Bot, API
from vkbottle.bot import Message
from vkbottle.framework.labeler import BotLabeler

from src.dialogue_tracker import DialogueTracker
from src.google_sheets_wrapper import GoogleSheetsWrapper

_VK_API = API(environ.get("VK_API_TOKEN"))
_VK_BOT_LABELER = BotLabeler()
_DIALOG_TRACKER = DialogueTracker()
_GOOGLE_SHEETS_WRAPPER = GoogleSheetsWrapper()

_HELP_MESSAGE = """–°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥:
- /help -- –ü–æ–º–æ—â—å
- /role <role> -- –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∫–∞—Å—Ç–æ–º–Ω—É—é —Ä–æ–ª—å
- /reset -- –°–±—Ä–æ—Å–∏—Ç—å —Ä–æ–ª—å –Ω–∞ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—É—é, –æ—á–∏—Å—Ç–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é

–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –∏—Å—Ç–æ—Ä–∏–∏: {messages_in_history}, –≤—Ä–µ–º—è –∂–∏–∑–Ω–∏ –∏—Å—Ç–æ—Ä–∏–∏: {max_alive_dialogue} —Å–µ–∫—É–Ω–¥.
–¢–µ–∫—É—â–∞—è —Ä–æ–ª—å: '{role}'
–ï—Å–ª–∏ –±–æ—Ç –¥–æ–ª–≥–æ –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç, –≤–µ—Ä–æ—è—Ç–Ω–æ, OpenAI API –ø–µ—Ä–µ–≥—Ä—É–∂–µ–Ω–æ, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.
–ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤—ã–≤–æ–¥–∏—Ç—Å—è –Ω–µ –¥–æ –∫–æ–Ω—Ü–∞, —Ç–æ –ø—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –ø–æ —Ç–æ–∫–µ–Ω–∞–º, —Å–±—Ä–æ—Å—å—Ç–µ –∏—Å—Ç–æ—Ä–∏—é.
–ü–æ –≤—Å–µ–º –≤–æ–ø—Ä–æ—Å–∞–º: @spirin.egor
"""


@_VK_BOT_LABELER.message(command="help")
async def help_message(message: Message):
    user_id = message.from_id
    help_msg = _HELP_MESSAGE.format(role=_DIALOG_TRACKER.get_role(user_id), **_DIALOG_TRACKER.config)
    await message.answer(help_msg)


@_VK_BOT_LABELER.message(command=("role", 1))
async def set_role(message: Message, args: tuple[str]):
    user_id = message.from_id
    _DIALOG_TRACKER.set_role(user_id, args[0])
    await message.answer("–†–æ–ª—å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞, –∏—Å—Ç–æ—Ä–∏—è —Å–±—Ä–æ—à–µ–Ω–∞")


@_VK_BOT_LABELER.message(command="reset")
async def reset(message: Message):
    user_id = message.from_id
    _DIALOG_TRACKER.reset(user_id)
    await message.answer("–†–æ–ª—å —Å–±—Ä–æ—à–µ–Ω–∞ –Ω–∞ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—É—é, –∏—Å—Ç–æ—Ä–∏—è —Å–±—Ä–æ—à–µ–Ω–∞")


@_VK_BOT_LABELER.message()
async def handle_message(message: Message):
    user_id = message.from_id
    try:
        answer, total_tokens = await _DIALOG_TRACKER.on_message(message.text, user_id)
        user_info = (await _VK_API.users.get(user_id))[0]
        user_name = f"{user_info.last_name} {user_info.first_name}"
        _GOOGLE_SHEETS_WRAPPER.increase_user_usage(user_id, user_name, total_tokens)
    except OpenAIError as e:
        logger.warning(f"OpenAI API error: {e}")
        answer = "API Error: try to repeat you request later or contact @spirin.egor ü§ó"
    except Exception as e:
        logger.error(e)
        answer = "Something went wrong: try to repeat you request later or contact @spirin.egor ü§ó"
    await message.answer(answer)


def main():
    logger.disable("vkbottle")
    logger.info(f"Starting VK bot")
    bot = Bot(api=_VK_API, labeler=_VK_BOT_LABELER)
    bot.run_forever()


if __name__ == "__main__":
    main()
